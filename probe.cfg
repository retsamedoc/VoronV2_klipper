####################################################################
#  Probe
#####################################################################

[probe]
## Tap Probe
pin: Z_MAX
x_offset: 0
y_offset: 0
#z_offset: 0.5
speed: 2.5
lift_speed: 15
samples: 1 #3
samples_result: median
sample_retract_dist: 1.5
#samples_tolerance: 0.005
samples_tolerance_retries: 10 #1
drop_first_result: true
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
points:
   25,25
   25,325
   325,325
   325,25
speed: 1000
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.01
max_adjust: 10

#####################################################################
#  Menu
#####################################################################
[menu __main __control __qgl]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: QGL
index: 3
gcode: QUAD_GANTRY_LEVEL


#####################################################################
#  Macros
#####################################################################
## customize QUAD GANTRY LEVEL gcode
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
variable_done: False
description: Conform a moving, twistable gantry to the shape of a stationary bed with klicky automount
gcode:
  SET_GCODE_VARIABLE MACRO=QUAD_GANTRY_LEVEL VARIABLE=done VALUE={ False }
  SMARTHOME
  G90

  _SET_Z_CURRENT VAL='HOME'
#  _QUAD_GANTRY_LEVEL MAX_ADJUST=20 HORIZONTAL_MOVE_Z=20 RETRIES=0 SAMPLES=1 SPEED=1500   ; fast qgl
  # Run a quick QGL just to make sure that we're in the ballpark
  #_QUAD_GANTRY_LEVEL SAMPLES=1
  # Do the real thing
  _QUAD_GANTRY_LEVEL {% for p in params
     %}{'%s=%s ' % (p, params[p])}{%
    endfor %}
  G28 Z
  _SET_Z_CURRENT

  SET_GCODE_VARIABLE MACRO=QUAD_GANTRY_LEVEL VARIABLE=done VALUE={ True }

[delayed_gcode _CHECK_QGL]
gcode:
  # check that QGL ended with no error
  {% if not printer.quad_gantry_level.applied %}
    # stop print if QGL stopped with failuare
    {action_respond_info("CANCEL PRINT BECAUSE OF QGL ERROR")}
    CANCEL_PRINT
    #_LCD_KNOB COLOR=RED BLINK=0.2
    G0 Z30 F1800
    G0 X175 Y175 F18000
  {% endif %}

[gcode_macro QGL]
gcode:
   QUAD_GANTRY_LEVEL

[gcode_macro SMARTQGL]
gcode:
  {% if not printer.quad_gantry_level.applied %}
      QUAD_GANTRY_LEVEL
  {% endif %}

## G-Code M18: Disable all stepper motors
[gcode_macro M18]
rename_existing: M0018
gcode:
  M0018
  SET_GCODE_VARIABLE MACRO=QUAD_GANTRY_LEVEL VARIABLE=done VALUE={ False }

## G-Code M84: Stop idle hold
[gcode_macro M84]
rename_existing: M0084
gcode:
  M0084
  SET_GCODE_VARIABLE MACRO=QUAD_GANTRY_LEVEL VARIABLE=done VALUE={ False }
